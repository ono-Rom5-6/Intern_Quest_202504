<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.intern_quest_202504.repository.OvertimeMapper">
	<resultMap type="spring.intern_quest_202504.domain.overtime.model.Overtime"
		id="overtime">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="department_id" property="departmentId" />
		<result column="section_id" property="sectionId" />
		<result column="main_pattern" property="mainPattern" />
		<result column="sub_pattern" property="subPattern" />
		<result column="schedule_start" property="scheduleStart" />
		<result column="schedule_finish" property="scheduleFinish" />
		<result column="reason" property="reason" />
		<result column="state" property="state" />
		<result column="approve_date" property="approveDate" />
		<result column="approve_name" property="approveName" />
		
		<result column="actual_start" property="actualStart" />
		<result column="actual_finish" property="actualFinish" />
		<result column="rest_second" property="restSecond" />
		<result column="content" property="content" />
		
		<result column="apply_date" property="applyDate" />
		
		<result column="weekday_daytime_second" property="weekdayDaytimeSecond" />
		<result column="weekday_not_daytime_second" property="weekdayNotDaytimeSecond" />
		<result column="holiday_daytime_second" property="holidayDaytimeSecond" />
		<result column="holiday_not_daytime_second" property="holidaydayNotDaytimeSecond" />
		
		<result column="combine_id" property="combineId" />
		<result column="is_deleted" property="isDeleted" />
		<result column="create_date" property="createDate" />
		<association property="department" resultMap="department"/>
		<collection property="section" ofType="spring.intern_quest_202504.domain.section.model.Section">
			<id column="section_id" property="sectionId" />
			<result column="section_name" property="sectionName" />
			<result column="department_id" property="depatmentId" />
		</collection>
		
		
		<collection property="user" ofType="spring.intern_quest_202504.domain.user.model.User">
			<id column="id" property="id" />
			<result column="user" property="user" />
			<result column="pass" property="pass" />
			<result column="name" property="name" />
			<result column="section_id" property="sectionId" />
			<result column="role" property="role" />
			<result column="authority" property="authority" />
		</collection>
		<collection property="combine" ofType="spring.intern_quest_202504.domain.combine.model.Combine">
			<id column="id" property="id" />
			<result column="create_user" property="createUser" />
			<result column="section_id" property="sectionId" />
		</collection>
		
	</resultMap>
	
	<resultMap type="spring.intern_quest_202504.domain.user.model.User"
		id="user">
		<id column="id" property="id" />
		<result column="user" property="user" />
		<result column="pass" property="pass" />
		<result column="name" property="name" />
		<result column="section_id" property="sectionId" />
		<result column="role" property="role" />
		<result column="authority" property="authority" />
	</resultMap>
	
	<resultMap type="spring.intern_quest_202504.domain.department.model.Department"
		id="department">
		<id column="department_id" property="departmentId" />
		<result column="department_name" property="departmentName" />
	</resultMap>
	
	<insert id="insertOvertime" parameterType="overtime">
		insert into overtime(
			user_id,
			department_id,
			main_pattern,
			sub_pattern,
			schedule_start,
			schedule_finish,
			reason
		)
		values(
			#{userId},
			#{departmentId},
			#{mainPattern},
			#{subPattern},
			#{scheduleStart},
			#{scheduleFinish},
			#{reason}
		)
	</insert>
	
	<select id="selectThisOvertimeList" parameterType="String"
		resultMap="overtime">
		select
			*, department.name as department_name
		from
			overtime
		join
			section
		on
			overtime.section_id = section.section_id
		join
			department
		on
			overtime.department_id = department.id
		where user_id = #{userId}
		order
		by
		schedule_start
		desc
	</select>
	
	<update id="updateReport">
		update
			overtime
		set
			actual_start = #{actualStart},
			actual_finish = #{actualFinish},
			rest_second = #{restSecond},
			apply_date = #{applyDate},
			content = #{content}
		where id = #{id}
	</update>
	
	<select id="selectYetCombinedList" parameterType="String"
		resultMap="overtime">
		select
			*, department.name as department_name
		from
			overtime
		join
			user
		on
			overtime.user_id = user.id
		join
			section
		on
			overtime.section_id = section.section_id
		join
			department
		on
			overtime.department_id = department.id
		where
			overtime.department_id = #{departmentId}
		and
			overtime.combine_id is null
		order
		by
		schedule_start
		desc
	</select>
	
	<update id="updateCombine">
		update
			overtime
		set
			combine_id = #{combineId}
		where id = #{id}
	</update>
	
	<select id="selectCombinedList" parameterType="String"
		resultMap="overtime">
		select
			*, department.name as department_name
		from
			overtime
		join
			user
		on
			overtime.user_id = user.id
		join
			section
		on
			overtime.section_id = section.section_id
		join
			department
		on
			section.department_id = department.id	
		join
			combine
		on
			overtime.combine_id = combine.id
		where
			combine.section_id = #{sectionId}
		and
			overtime.combine_id is not null
		and
			overtime.state = 0
		order
		by
		schedule_start
		desc
	</select>
	
	<update id="updateApprove">
		update
			overtime
		set
			state = #{state},
			approve_name = #{approveName},
			approve_date = #{approveDate}
		where id = #{id}
	</update>
	
	<select id="selectOvertime" parameterType="String"
		resultMap="overtime">
		select
			*, department.name as department_name
		from
			overtime
		join
			user
		on
			overtime.user_id = user.id
		join
			section
		on
			overtime.section_id = section.section_id
		join
			department
		on
			overtime.department_id = department.id
		where
			overtime.id = #{id}
	</select>
	
	<select id="selectMonthlyProcessingList" parameterType="String"
		resultMap="overtime">
		select
			*, department.name as department_name
		from
			overtime
		join
			user
		on
			overtime.user_id = user.id
		join
			department
		join
			section
		on
			overtime.section_id = section.section_id
		join
			department
		on
			overtime.department_id = department.id
		where
			overtime.section_id = #{sectionId}
		and
			date_format(approve_date, '%Y-%m')
				= date_format(curdate() - interval 1 month, '%Y-%m')
		and
			overtime.state = 1
		order
		by
		schedule_start
		desc
	</select>
	
</mapper>
